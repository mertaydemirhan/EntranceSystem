<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>42</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBwAAAEAIACYDgAAFgAAACgAAAAgAAAAOAAAAAEAIAAAAAAAAA4AACMuAAAjLgAAAAAAAAAA
        AADFxcP8rq3J/DUu6P0jG+39JBzt/SQc7f0kHO39JBzt/SQc7f0kHO39JBzt/yQc7cUAAPgKxsbCK8PD
        w+TDw8PWzc3AHRgQ8BkkHO3cJBzt/yQc7f8kHO3/JBzt/yQc7f8kHO3/JBzt/yQc7f8kHO3qJBztKyQc
        7QAAAAAAAAAAAMTEw/+xsMj6ODHo3SMb7dkkHO3ZJBzt2CQc7dgkHO3YJBzt2CQc7dckHO3aJBztpx4V
        7wrd3rwEw8PDoMPDw//FxcJqEAjyFSQc7cAkHO3gJBzt3iQc7d0kHO3dJBzt3CQc7dwkHO3eJBzt+SQc
        7eskHO0rJBztAAAAAAAAAAAAw8PD/8HBxOB9etUxFw/wFiQc7RgkHO0XJBztFyQc7RckHO0XJBztFiQc
        7RYkHO0RJBztAcDAxADDw8M/w8PD8sPDw8uwr8gZGRDvFxgQ7BscFOwbGA/sGh0U7RoXDuwZFg3sGBsT
        7ScjG+3TIxvt7SIa7SsiGu0AAAAAAAAAAADDw8P/w8PD3cPDwxvDw8MAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAw8PDAMPDwwfDw8Opw8PD/8PDw2MAAAAA////Fv///w////8X////Dv//
        /xf///8Xv7z6IT43745AOe+mgXz1Lf///xZoYvMaHxftF8PDw//Dw8Pdw8PDG8PDwwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADDw8MAw8PDAMPDw0jDw8P2wsLCwe7u7kD///9n////ZP//
        /2j///96////Z////3H///9z////YP///3f///97////f3t29E4hGe19w8PD/8PDw93Dw8Mbw8PDAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADDw8MAw8PDCsPDw7PCwsL61NTUfv//
        /2H///9k////Z////4T///9J////Vv///1n///91////cP///2T///+EmZb3ZSEZ7XjDw8P/w8PD3cPD
        wxvh47sAJBztEiQc7TokHO1XJBztYiQc7VwkHO1DJBztHiQc7QQkHO0AAAAAAMPDwwDDw8MAw8PDUcPD
        w/rDw8O87u7uMP///yD///8t////G////xL///8UxML6G2Vf8oRUTvGJtrT5Ov///yLR0PsjIxvtIsPD
        w//Dw8PdzMzBGhYN8RMkHO22JBzt9iQc7f8kHO38JBzt+CQc7fYkHO3hJBztoCQc7T4kHO0EJBztAMPD
        wwDDw8MOw8PDvMPDw/nCwsJQxMTEAKioqAAAAAAAAAAAACIZ7QAiGO0QIhrtziIa7e4hGe0rIRntAAAA
        AAAAAAAAw8PD/8PDw93Hx8IbAgD2CCQc7bckHO3UJBztgiQc7VMkHO1JJBztXyQc7ZckHO3hJBzt8CQc
        7YYkHO0RJh7tAMPDwwDDw8Nbw8PD/cPDw7LDw8MKw8PDAAAAAAAAAAAAJBztACQc7RAkHO3OJBzt7iQc
        7SskHO0AAAAAAAAAAADDw8P/w8PD3cPDwxu9vMUAJBztMSQc7R0kHO0AJBztAAAAAAAkHO0AJBztASQc
        7SQkHO2aJBzt9yQc7aAkHO0ReHTXAMPDwxLDw8PFw8PD9sPDw0jDw8MAw8PDAAAAAAAkHO0AJBztECQc
        7c4kHO3uJBztKyQc7QAAAAAAAAAAAMPDw//Dw8Pdw8PDG8PDwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAJBztACQc7QkkHO2GJBzt+SQc7YYjG+0Ds7LHAMPDw2XDw8P/w8PDqsPDwwfDw8MAAAAAACQc
        7QAkHO0QJBztziQc7e4kHO0rJBztAAAAAAAAAAAAw8PD/8PDw93Dw8Mbw8PDAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAJBztACQc7Q8kHO2zJBzt7yQc7UBYU98Aw8PDF8PDw83Dw8Pyw8PDQMPD
        wwDDw8MAJBztACQc7RAkHO3OJBzt7iQc7SskHO0AAAAAAAAAAADDw8P/w8PD3cPDwxvDw8MAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkHO0AJBztACQc7UgkHO34JBztoiIa7QSwr8gAw8PDb8PD
        w//Dw8Ogw8PDBcPDwwAkHO0AJBztECQc7c4kHO3uJBztKyQc7QAAAAAAAAAAAMPDw//Dw8Pdw8PDG8PD
        wwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkHO0AJBztEiQc7c0kHO3lJBztJGll
        2wDDw8Mdw8PD1cPDw+3Dw8M4w8PDACQc7QAkHO0QJBztziQc7e4kHO0rJBztAAAAAAAAAAAAw8PD/8PD
        w93Dw8Mbw8PDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQc7QAkHO0CJBztqCQc
        7f4kHO1OJx/sAMPDwwDDw8N5w8PD/8PDw5fDw8MCR0DkACQc7RAkHO3OJBzt7iQc7SskHO0AAAAAAAAA
        AADDw8P/w8PD3cPDwxvDw8MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJBztACQc
        7QQkHO2uJBzt/yQc7WUkHO0Aw8PDAMPDwyPDw8Pcw8PD6MPDwzCYls4AJBztECQc7c4kHO3uJBztKyQc
        7QAAAAAAAAAAAMPDw//Dw8Pdw8PDG8PDwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQc
        7QAkHO0AJBztPCQc7eYkHO39JBztVCQc7QDDw8MAw8PDAMPDw4TDw8P/w8PDjQAA/wAiGu4QJBztziQc
        7e4kHO0rJBztAAAAAAAAAAAAw8PD/8PDw93Dw8Mbw8PDAAAAAAAAAAAAJBztACQc7QskHO09JBztOCQc
        7TAkHO0wJBztQiQc7XokHO3bJBzt/yQc7dEkHO0dJBztAAAAAADDw8MAw8PDKsPDw+PDw8PjxcXCKQAA
        +wckHO29JBzt7iQc7SskHO0AAAAAAAAAAADDw8P/w8PD3cPDwxvDw8MAAAAAAAAAAAAkHO0AJBztDiQc
        7b0kHO31JBzt8CQc7fIkHO36JBzt/yQc7fskHO3LJBztQyQc7QAkHO0AAAAAAMPDwwDDw8MBw8PDjsPD
        w//Dw8OEQDnmACQc7XckHO3sJBztKyQc7QAAAAAAAAAAAMPDw//Dw8Pdw8PDG8PDwwAAAAAAAAAAACQc
        7QAkHO0AJBztdCQc7f8kHO2xJBztiiQc7Y4kHO1+JBztUiQc7RckHO0AJBztAAAAAAAAAAAAAAAAAMPD
        wwDDw8Mxw8PD6cPDw9zR0b8gHRTvLiQc7dQkHO0sJBztAAAAAAAAAAAAw8PD/8PDw93Dw8Mbw8PDAAAA
        AAAAAAAAAAAAACQc7QAkHO0qJBzt5yQc7ZgkHO0BJBztAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAw8PDAMPDwwPDw8OYw8PD/8TEw3kAAPgGJBztmiQc7S8kHO0AAAAAAAAAAADDw8P/w8PD3cPD
        wxvDw8MAAAAAAAAAAAAAAAAAJBztACQc7QQkHO2lJBzt4SQc7SMkHO0AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADDw8MAw8PDAMPDwzjDw8Ptw8PD1tHSvxsgGO5LJBztKSQc7QAAAAAAAAAAAMPD
        w//Dw8Pgw8PDLsPDwxPDw8MVw8PDFcPDwxXDw8MQAAD6ACQc7VEkHO32OTLneNXWviLDw8Mlw8PDJcPD
        wyXDw8Mlw8PDJcPDwyXDw8Mlw8PDJcPDwyXDw8Mlw8PDKsPDw7nDw8P/xMTDbwYA9Q0jG+0NJBztAAAA
        AAAAAAAAw8PD/8PDw/rDw8Paw8PD1sPDw9bDw8PWw8PD2cPDw6Pe4LwIIBfuFCEZ7sxNR+L2vb3E58PD
        w+jDw8Pow8PD6MPDw+jDw8Pow8PD6MPDw+jDw8Pow8PD6MPDw+jDw8Pnw8PD88PDw//Dw8POw8PDGcTE
        wwAkHO0AAAAAAAAAAADDw8Prw8PD68PDw+3Dw8Ptw8PD7cPDw+3Dw8Pww8PDtcTEwwpJQ+MAIxrtfy8n
        6v+dm83rxcXC28PDw9zDw8Pcw8PD3MPDw9zDw8Pcw8PD3MPDw9zDw8Pcw8PD3MPDw9zDw8Pcw8PD28PD
        w9nDw8NRw8PDAMPDwwAAAAAAAAAAAMPDwyvDw8Mrw8PDK8PDwyvDw8Mrw8PDK8PDwyzDw8Mhw8PDAioi
        6wAkHO0yJBzt7TUu6KK1tccctLTHHLOzxxyzs8ccs7PHHLOzxxyzs8ccwcHDGsTEwxrDw8Maw8PDGsPD
        wxrDw8Maw8PDG8PDwxDDw8MAw8PDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAJBztACQc7QckHO2uIxvt7CIa7a4iGu2rIhrtqyIa7asiGu2rIhrtqyIa7a0iGu1QJBzsABEK
        8wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAkHO0AJBztACQc7WIkHO39JBzt/yQc7f8kHO3/JBzt/yQc7f8kHO3/JBzt/yQc
        7agkHO0EJBztAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAAHAAQABx/8
        IAAf/gAAH/4AABAPAAAAAw+HAAGHhxPAh4cf8EOHH/hDhx/8IYcf/CGHH/wwhx/8MIcf/DiHHgA4Bx4A
        eEcfAPwHHw/8Bx8P/gcAgAAHAAAADwBAAA8AQAAP/8AH///gA/8=
</value>
  </data>
</root>